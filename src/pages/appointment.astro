---
import Layout from '../layouts/Layout.astro';
---



        <Layout title="预约演示 - TeGo-AI" description="预约 TeGo-AI 产品演示">
          <div class="appointment-page">
            <!-- 粒子效果 -->
            <div class="particles">
              <div class="particle"></div>
              <div class="particle"></div>
              <div class="particle"></div>
              <div class="particle"></div>
              <div class="particle"></div>
              <div class="particle"></div>
              <div class="particle"></div>
              <div class="particle"></div>
            </div>
    <div class="hero-section">
      <h1>预约产品演示</h1>
      <p>体验 TeGo-AI 智能体管理平台的强大功能</p>
    </div>

    <div class="appointment-form-container">
      <div class="form-card">
        <h2>填写预约信息</h2>
        <form id="appointmentForm" class="appointment-form">
          <div class="form-group">
            <label for="name" class="required">姓名</label>
            <input type="text" id="name" name="name" required placeholder="请输入您的姓名">
          </div>

          <div class="form-group">
            <label for="phone" class="required">联系方式</label>
            <input type="tel" id="phone" name="phone" required placeholder="请输入您的手机号码">
          </div>

          <div class="form-group">
            <label for="email">联系邮箱</label>
            <input type="email" id="email" name="email" placeholder="请输入您的邮箱地址（选填）">
          </div>

          <div class="form-group">
            <label for="appointmentTime" class="required">预约演示时间</label>
            <input type="datetime-local" id="appointmentTime" name="appointmentTime" required min="">
          </div>

          <div class="form-group">
            <label for="participantCount" class="required">参会人数(规模)</label>
            <select id="participantCount" name="participantCount" required>
              <option value="">请选择参会人数</option>
              <option value="1-2人">1-2人</option>
              <option value="3-5人">3-5人</option>
              <option value="6-10人">6-10人</option>
              <option value="11-20人">11-20人</option>
              <option value="21-50人">21-50人</option>
              <option value="50人以上">50人以上</option>
            </select>
          </div>

          <div class="form-group">
            <label for="message">备注信息</label>
            <textarea id="message" name="message" rows="4" placeholder="请输入您的具体需求或备注信息（选填）"></textarea>
          </div>

          <div class="form-actions">
            <button type="submit" class="submit-btn">提交预约</button>
            <button type="reset" class="reset-btn">重置表单</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- 成功弹窗 -->
  <div id="successModal" class="modal" style="display: none;">
    <div class="modal-content">
      <div class="modal-header success">
        <div class="modal-icon">
          <svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
            <polyline points="22,4 12,14.01 9,11.01"></polyline>
          </svg>
        </div>
        <h2>预约成功！</h2>
      </div>
      <div class="modal-body">
        <p class="success-message">感谢您的预约！我们将会根据预约顺序演示，请您注意查收电话或邮箱消息。</p>
        <div id="appointmentDetails" class="appointment-details"></div>
      </div>
      <div class="modal-footer">
        <a href="/" class="btn primary">返回首页</a>
      </div>
    </div>
  </div>

  <!-- 失败弹窗 -->
  <div id="failedModal" class="modal" style="display: none;">
    <div class="modal-content">
      <div class="modal-header failed">
        <div class="modal-icon">
          <svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="12" cy="12" r="10"></circle>
            <line x1="15" y1="9" x2="9" y2="15"></line>
            <line x1="9" y1="9" x2="15" y2="15"></line>
          </svg>
        </div>
        <h2>预约失败</h2>
      </div>
      <div class="modal-body">
        <p class="failed-message">很抱歉，预约提交失败。您可以复制以下信息发送至<strong>  zhama@zhama.com </strong>进行预约或重新提交 </p>
        <div id="failedAppointmentDetails" class="appointment-details"></div>
      </div>
      <div class="modal-footer">
        <button class="btn secondary" onclick="document.getElementById('failedModal').style.display='none'">重新提交</button>
      </div>
    </div>
  </div>
</Layout>

<script>
  // 设置时间选择器的最小时间为当前时间
  document.addEventListener('DOMContentLoaded', function() {
    const timeInput = document.getElementById('appointmentTime') as HTMLInputElement;
    if (timeInput) {
      const now = new Date();
      const year = now.getFullYear();
      const month = String(now.getMonth() + 1).padStart(2, '0');
      const day = String(now.getDate()).padStart(2, '0');
      const hours = String(now.getHours()).padStart(2, '0');
      const minutes = String(now.getMinutes()).padStart(2, '0');
      const minDateTime = `${year}-${month}-${day}T${hours}:${minutes}`;
      timeInput.min = minDateTime;
    }

    // 初始化 EmailJS
    if (typeof (window as any).emailjs !== 'undefined') {
      (window as any).emailjs.init("iQd41kzea2D4VhTGG");
    }
  });

  // 表单提交处理
  document.getElementById('appointmentForm')?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const target = e.target as HTMLFormElement;
    const formData = new FormData(target);
    
    // 收集表单数据
    const appointmentData = {
      name: formData.get('name') || '',
      phone: formData.get('phone') || '',
      email: formData.get('email') || '',
      appointmentTime: formData.get('appointmentTime') || '',
      participantCount: formData.get('participantCount') || '',
      message: formData.get('message') || '',
      submitTime: new Date().toISOString()
    };

    // 获取提交按钮并禁用
    const submitButton = target.querySelector('button[type="submit"]') as HTMLButtonElement;
    const originalText = submitButton.textContent;
    submitButton.disabled = true;
    submitButton.textContent = '正在预约中...';

    try {
      // 检查 EmailJS 是否可用
      if (typeof (window as any).emailjs === 'undefined') {
        throw new Error('EmailJS not loaded');
      }
      
      // 使用 EmailJS 发送邮件
      const response = await (window as any).emailjs.sendForm(
        'service_omwt0qw', 
        'template_xhzkjb6', 
        target
      );
      
      // 显示成功弹窗
      showSuccessModal(appointmentData);
    } catch (error) {
      // 显示失败弹窗
      showFailedModal(appointmentData);
    } finally {
      // 重新启用提交按钮
      submitButton.disabled = false;
      submitButton.textContent = originalText;
    }
  });

  // 弹窗相关函数
  function showSuccessModal(appointmentData) {
    const detailsContainer = document.getElementById('appointmentDetails');
    if (detailsContainer) {
      detailsContainer.innerHTML = `
        <div class="details-grid">
          <div class="detail-item">
            <span class="label" style="font-weight: 900; color: #000000; font-size: 1.1rem;">联系姓名：</span>
            <span class="value">${appointmentData.name || '-'}</span>
          </div>
          <div class="detail-item">
            <span class="label" style="font-weight: 900; color: #000000; font-size: 1.1rem;">联系方式：</span>
            <span class="value">${appointmentData.phone || '-'}</span>
          </div>
          <div class="detail-item">
            <span class="label" style="font-weight: 900; color: #000000; font-size: 1.1rem;">联系邮箱：</span>
            <span class="value">${appointmentData.email || '-'}</span>
          </div>
          <div class="detail-item">
            <span class="label" style="font-weight: 900; color: #000000; font-size: 1.1rem;">预约时间：</span>
            <span class="value">${appointmentData.appointmentTime ? new Date(appointmentData.appointmentTime).toLocaleString('zh-CN') : '-'}</span>
          </div>
          <div class="detail-item">
            <span class="label" style="font-weight: 900; color: #000000; font-size: 1.1rem;">参会人数：</span>
            <span class="value">${appointmentData.participantCount || '-'}</span>
          </div>
          <div class="detail-item">
            <span class="label" style="font-weight: 900; color: #000000; font-size: 1.1rem;">备注信息：</span>
            <span class="value">${appointmentData.message || '-'}</span>
          </div>
        </div>
      `;
    }
    const modal = document.getElementById('successModal') as HTMLElement;
    if (modal) {
      modal.style.display = 'flex';
      
      // 添加ESC键监听
      document.addEventListener('keydown', handleEscKey);
      
      // 添加点击空白区域关闭
      modal.addEventListener('click', handleModalClick);
    }
  }

  function showFailedModal(appointmentData) {
    const detailsContainer = document.getElementById('failedAppointmentDetails');
    if (detailsContainer) {
      detailsContainer.innerHTML = `
        <div class="details-grid">
          <div class="detail-item">
            <span class="label" style="font-weight: 900; color: #000000; font-size: 1.1rem;">联系姓名：</span>
            <span class="value">${appointmentData.name || '-'}</span>
          </div>
          <div class="detail-item">
            <span class="label" style="font-weight: 900; color: #000000; font-size: 1.1rem;">联系方式：</span>
            <span class="value">${appointmentData.phone || '-'}</span>
          </div>
          <div class="detail-item">
            <span class="label" style="font-weight: 900; color: #000000; font-size: 1.1rem;">联系邮箱：</span>
            <span class="value">${appointmentData.email || '-'}</span>
          </div>
          <div class="detail-item">
            <span class="label" style="font-weight: 900; color: #000000; font-size: 1.1rem;">预约时间：</span>
            <span class="value">${appointmentData.appointmentTime ? new Date(appointmentData.appointmentTime).toLocaleString('zh-CN') : '-'}</span>
          </div>
          <div class="detail-item">
            <span class="label" style="font-weight: 900; color: #000000; font-size: 1.1rem;">参会人数：</span>
            <span class="value">${appointmentData.participantCount || '-'}</span>
          </div>
          <div class="detail-item">
            <span class="label" style="font-weight: 900; color: #000000; font-size: 1.1rem;">备注信息：</span>
            <span class="value">${appointmentData.message || '-'}</span>
          </div>
        </div>
      `;
    }
    const modal = document.getElementById('failedModal') as HTMLElement;
    if (modal) {
      modal.style.display = 'flex';
      
      // 添加ESC键监听
      document.addEventListener('keydown', handleEscKey);
      
      // 添加点击空白区域关闭
      modal.addEventListener('click', handleModalClick);
    }
  }

  function closeModal(modalId) {
    const modal = document.getElementById(modalId) as HTMLElement;
    if (modal) {
      modal.style.display = 'none';
      
      // 移除事件监听器
      document.removeEventListener('keydown', handleEscKey);
      // 从正确的元素上移除点击事件监听器
      if (modalId === 'successModal') {
        const successModal = document.getElementById('successModal') as HTMLElement;
        if (successModal) {
          successModal.removeEventListener('click', handleModalClick);
        }
      } else if (modalId === 'failedModal') {
        const failedModal = document.getElementById('failedModal') as HTMLElement;
        if (failedModal) {
          failedModal.removeEventListener('click', handleModalClick);
        }
      }
    }
  }

  function resetAndClose() {
    const form = document.getElementById('appointmentForm') as HTMLFormElement;
    if (form) {
      form.reset();
    }
    closeModal('successModal');
  }







  // 处理ESC键关闭弹窗
  function handleEscKey(event) {
    if (event.key === 'Escape') {
      const successModal = document.getElementById('successModal') as HTMLElement;
      const failedModal = document.getElementById('failedModal') as HTMLElement;
      
      if (successModal && successModal.style.display === 'flex') {
        closeModal('successModal');
      } else if (failedModal && failedModal.style.display === 'flex') {
        closeModal('failedModal');
      }
    }
  }

  // 处理点击空白区域关闭弹窗
  function handleModalClick(event) {
    if (event.target.classList.contains('modal')) {
      const successModal = document.getElementById('successModal');
      const failedModal = document.getElementById('failedModal');
      
      if (successModal && successModal.style.display === 'flex') {
        closeModal('successModal');
      } else if (failedModal && failedModal.style.display === 'flex') {
        closeModal('failedModal');
      }
    }
  }




</script>

<style>
  .appointment-page {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem 1rem;
    min-height: 100vh;
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
    position: relative;
    overflow: hidden;
    animation: pageFadeIn 1s ease-out;
  }

  @keyframes pageFadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* 背景装饰元素 */
  .appointment-page::before {
    content: '';
    position: absolute;
    top: -50%;
    right: -20%;
    width: 400px;
    height: 400px;
    background: radial-gradient(circle, rgba(59, 130, 246, 0.1) 0%, transparent 70%);
    border-radius: 50%;
    animation: float 6s ease-in-out infinite;
    z-index: 0;
  }

  .appointment-page::after {
    content: '';
    position: absolute;
    bottom: -30%;
    left: -15%;
    width: 300px;
    height: 300px;
    background: radial-gradient(circle, rgba(16, 185, 129, 0.08) 0%, transparent 70%);
    border-radius: 50%;
    animation: float 8s ease-in-out infinite reverse;
    z-index: 0;
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    50% { transform: translateY(-20px) rotate(180deg); }
  }

  /* 粒子效果 */
  .particles {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    z-index: 0;
  }

  .particle {
    position: absolute;
    width: 4px;
    height: 4px;
    background: rgba(59, 130, 246, 0.3);
    border-radius: 50%;
    animation: particleFloat 8s infinite linear;
  }

  .particle:nth-child(1) { left: 10%; animation-delay: 0s; }
  .particle:nth-child(2) { left: 20%; animation-delay: 2s; }
  .particle:nth-child(3) { left: 30%; animation-delay: 4s; }
  .particle:nth-child(4) { left: 40%; animation-delay: 6s; }
  .particle:nth-child(5) { left: 50%; animation-delay: 8s; }
  .particle:nth-child(6) { left: 60%; animation-delay: 10s; }
  .particle:nth-child(7) { left: 70%; animation-delay: 12s; }
  .particle:nth-child(8) { left: 80%; animation-delay: 14s; }

  @keyframes particleFloat {
    0% {
      transform: translateY(100vh) scale(0);
      opacity: 0;
    }
    10% {
      opacity: 1;
    }
    90% {
      opacity: 1;
    }
    100% {
      transform: translateY(-100px) scale(1);
      opacity: 0;
    }
  }

  .hero-section {
    text-align: center;
    margin-bottom: 3rem;
    background: linear-gradient(135deg, #1e40af 0%, #3b82f6 50%, #8b5cf6 100%);
    padding: 3rem 2rem;
    border-radius: 20px;
    box-shadow: 0 15px 35px rgba(59, 130, 246, 0.2);
    margin: 0 -1rem 3rem -1rem;
  }

  .hero-section h1 {
    font-size: 2.8rem;
    font-weight: 700;
    color: white;
    margin-bottom: 1rem;
    text-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
  }

  .hero-section p {
    font-size: 1.3rem;
    color: rgba(255, 255, 255, 0.9);
    line-height: 1.6;
    max-width: 600px;
    margin: 0 auto;
    text-shadow: 0 1px 4px rgba(0, 0, 0, 0.2);
  }

  .form-card {
    background: white;
    border-radius: 20px;
    padding: 3rem;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.08);
    border: 1px solid rgba(59, 130, 246, 0.08);
    backdrop-filter: blur(10px);
    position: relative;
    z-index: 1;
    overflow: hidden;
  }

  .form-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, #3b82f6, #8b5cf6, #ec4899, #f59e0b);
    animation: gradientMove 3s ease-in-out infinite;
  }

  @keyframes gradientMove {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
  }

  .form-card h2 {
    text-align: center;
    font-size: 2rem;
    font-weight: 600;
    color: #1e293b;
    margin-bottom: 2.5rem;
    position: relative;
  }

  .form-card h2::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 3px;
    background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%);
    border-radius: 2px;
  }

  .appointment-form {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .form-group {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .form-group label {
    font-weight: 600;
    color: #374151;
    font-size: 0.95rem;
  }

  .form-group label.required::after {
    content: ' *';
    color: #ef4444;
  }

  .form-group input,
  .form-group textarea,
  .form-group select {
    padding: 1rem 1.25rem;
    border: 2px solid #e2e8f0;
    border-radius: 16px;
    font-size: 1rem;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    background: #f8fafc;
    color: #1e293b;
    font-family: inherit;
    position: relative;
    overflow: hidden;
  }

  .form-group input::before,
  .form-group textarea::before,
  .form-group select::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(59, 130, 246, 0.1), transparent);
    transition: left 0.5s ease;
  }

  .form-group input:focus::before,
  .form-group textarea:focus::before,
  .form-group select:focus::before {
    left: 100%;
  }

  .form-group input:focus,
  .form-group textarea:focus,
  .form-group select:focus {
    outline: none;
    border-color: #3b82f6;
    background: white;
    box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.15);
    transform: translateY(-1px);
  }

  .form-group input:hover,
  .form-group textarea:hover,
  .form-group select:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.1);
  }

  .form-group input[type="datetime-local"] {
    cursor: pointer;
    position: relative;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 2v4M16 2v4M3 10h18M5 4h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2z'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right 1rem center;
    background-size: 1.5em 1.5em;
    padding-right: 3rem;
    appearance: none;
    -webkit-appearance: none;
    font-weight: 500;
    color: #374151;
  }

  .form-group input[type="datetime-local"]::-webkit-calendar-picker-indicator {
    background: transparent;
    bottom: 0;
    color: transparent;
    cursor: pointer;
    height: auto;
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    width: auto;
    opacity: 0;
  }

  .form-group input[type="datetime-local"]:hover {
    border-color: #94a3b8;
    background-color: #f1f5f9;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24'%3e%3cpath stroke='%234b5563' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 2v4M16 2v4M3 10h18M5 4h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2z'/%3e%3c/svg%3e");
  }

  .form-group input[type="datetime-local"]:focus {
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24'%3e%3cpath stroke='%233b82f6' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 2v4M16 2v4M3 10h18M5 4h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2z'/%3e%3c/svg%3e");
  }

  .form-group textarea {
    resize: vertical;
    min-height: 120px;
    line-height: 1.6;
  }

  .form-group select {
    cursor: pointer;
    padding: 1rem 1.25rem;
    border: 2px solid #e2e8f0;
    border-radius: 16px;
    font-size: 1rem;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    background: #f8fafc;
    color: #1e293b;
    font-family: inherit;
    /* 隐藏默认下拉箭头 */
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    padding-right: 1.25rem;
  }

  .form-group select:hover {
    border-color: #94a3b8;
    background-color: #f1f5f9;
  }

  .form-group select:focus {
    border-color: #3b82f6;
    background: white;
    box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.15);
    transform: translateY(-1px);
  }

  .form-group select option {
    padding: 0.5rem 1rem;
    background: white;
    color: #374151;
  }

  .form-group select option:hover {
    background: #f1f5f9;
  }



  .form-actions {
    display: flex;
    gap: 1.5rem;
    justify-content: center;
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid #e2e8f0;
  }

  .submit-btn,
  .reset-btn {
    padding: 1rem 2.5rem;
    border: none;
    border-radius: 16px;
    font-size: 1.1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    min-width: 140px;
    position: relative;
    overflow: hidden;
  }

  .submit-btn {
    background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%);
    color: white;
    box-shadow: 0 8px 25px rgba(59, 130, 246, 0.3);
    transform-style: preserve-3d;
  }

  .submit-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s;
  }

  .submit-btn::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: all 0.6s ease;
  }

  .submit-btn:active::after {
    width: 300px;
    height: 300px;
  }

  .submit-btn:hover::before {
    left: 100%;
  }

  .submit-btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 12px 35px rgba(59, 130, 246, 0.4);
  }

  .submit-btn:active {
    transform: translateY(-1px);
  }

  .reset-btn {
    background: #f8fafc;
    color: #475569;
    border: 2px solid #e2e8f0;
  }

  .reset-btn:hover {
    background: #f1f5f9;
    border-color: #cbd5e1;
    color: #334155;
    transform: translateY(-2px);
  }

  .reset-btn:active {
    transform: translateY(0);
  }





  @media (max-width: 768px) {
    .appointment-page {
      padding: 1rem;
    }

    .form-card {
      padding: 2rem 1.5rem;
      margin: 0 0.5rem;
    }

    .hero-section h1 {
      font-size: 2.2rem;
    }

    .hero-section p {
      font-size: 1.1rem;
    }

    .form-card h2 {
      font-size: 1.6rem;
    }

    .form-actions {
      flex-direction: column;
      gap: 1rem;
    }

    .submit-btn,
    .reset-btn {
      width: 100%;
      min-width: auto;
    }
  }

  @media (max-width: 480px) {
    .hero-section h1 {
      font-size: 1.8rem;
    }

    .form-card {
      padding: 1.5rem 1rem;
    }
  }

  /* 弹窗样式 */
  .modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, rgba(59, 130, 246, 0.8) 0%, rgba(16, 185, 129, 0.8) 100%);
    display: none;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    backdrop-filter: blur(8px);
  }

  .modal-content {
    background: white;
    border-radius: 20px;
    max-width: 600px;
    width: 90%;
    max-height: 90vh;
    overflow-y: auto;
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.2);
    animation: modalSlideIn 0.3s ease-out;
    position: relative;
    overflow: hidden;
    z-index: 1001;
  }

  .modal-content::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, #10b981, #059669, #047857, #065f46);
    animation: successGradient 2s ease-in-out infinite;
  }

  @keyframes successGradient {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
  }

  @keyframes modalSlideIn {
    from {
      opacity: 0;
      transform: translateY(-20px) scale(0.95);
    }
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  .modal-header {
    padding: 2rem 2rem 1rem;
    text-align: center;
    border-bottom: 1px solid #e2e8f0;
  }

  .modal-header.success {
    background: white;
    color: #1e293b;
    border-radius: 20px 20px 0 0;
    border-bottom: 2px solid #e2e8f0;
  }

  .modal-header.success .modal-icon svg {
    stroke: #10b981;
    animation: successIconBounce 0.6s ease-out 0.3s both;
  }

  .modal-header.failed .modal-icon svg {
    stroke: white;
    animation: failedIconShake 0.6s ease-out 0.3s both;
  }

  @keyframes successIconBounce {
    0% {
      transform: scale(0) rotate(-180deg);
      opacity: 0;
    }
    50% {
      transform: scale(1.2) rotate(0deg);
    }
    100% {
      transform: scale(1) rotate(0deg);
      opacity: 1;
    }
  }

  @keyframes failedIconShake {
    0% {
      transform: scale(0) rotate(0deg);
      opacity: 0;
    }
    25% {
      transform: scale(1.1) rotate(-5deg);
    }
    50% {
      transform: scale(1.2) rotate(5deg);
    }
    75% {
      transform: scale(1.1) rotate(-3deg);
    }
    100% {
      transform: scale(1) rotate(0deg);
      opacity: 1;
    }
  }

  .modal-header.failed {
    background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
    color: white;
    border-radius: 20px 20px 0 0;
  }

  .modal-icon {
    font-size: 3rem;
    margin-bottom: 1rem;
  }

  .modal-header h2 {
    margin: 0;
    font-size: 1.8rem;
    font-weight: 600;
  }

  .modal-body {
    padding: 2rem;
  }

  .success-message, .failed-message {
    font-size: 1.1rem;
    line-height: 1.6;
    margin-bottom: 1.5rem;
    text-align: center;
  }

  .success-message {
    color: #374151;
    animation: successMessageSlideIn 0.8s ease-out 0.5s both;
  }

  @keyframes successMessageSlideIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .failed-message {
    color: #dc2626;
  }

  .modal-footer {
    padding: 1.5rem 2rem 2rem;
    display: flex;
    gap: 1rem;
    justify-content: center;
    border-top: 1px solid #e2e8f0;
  }

  .modal .btn {
    min-width: 120px;
    animation: buttonPulse 2s ease-in-out infinite;
  }

  @keyframes buttonPulse {
    0%, 100% {
      transform: scale(1);
      box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);
    }
    50% {
      transform: scale(1.05);
      box-shadow: 0 6px 20px rgba(59, 130, 246, 0.4);
    }
  }

  .modal .appointment-details {
    background: #f8fafc;
    border-radius: 12px;
    padding: 1.5rem;
    margin-top: 1rem;
    animation: detailsFadeIn 1s ease-out 0.7s both;
    border-left: 4px solid #10b981;
    max-height: 300px;
    overflow-y: auto;
  }

  /* 自定义滚动条样式 */
  .modal .appointment-details::-webkit-scrollbar {
    width: 8px;
  }

  .modal .appointment-details::-webkit-scrollbar-track {
    background: #f1f5f9;
    border-radius: 4px;
  }

  .modal .appointment-details::-webkit-scrollbar-thumb {
    background: #cbd5e1;
    border-radius: 4px;
  }

  .modal .appointment-details::-webkit-scrollbar-thumb:hover {
    background: #94a3b8;
  }

  @keyframes detailsFadeIn {
    from {
      opacity: 0;
      transform: translateX(-20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  .modal .details-grid {
    display: grid;
    gap: 0.75rem;
  }

  .modal .detail-item {
    display: flex;
    gap: 0.75rem;
    align-items: flex-start;
  }

  .modal .label {
    font-weight: 900 !important;
    color: #000000 !important;
    min-width: 80px;
    flex-shrink: 0;
    font-size: 1.1rem !important;
    text-align: right;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  }

  /* 确保弹窗中的标签样式生效 */
  #successModal .label,
  #failedModal .label {
    font-weight: 900 !important;
    color: #000000 !important;
    font-size: 1.1rem !important;
  }

  .modal .value {
    color: #64748b;
    flex: 1;
  }

  @media (max-width: 768px) {
    .modal-content {
      width: 95%;
      margin: 1rem;
    }

    .modal-header, .modal-body, .modal-footer {
      padding: 1.5rem;
    }

    .modal-footer {
      flex-direction: column;
    }

    .modal .btn {
      width: 100%;
    }
  }

</style>