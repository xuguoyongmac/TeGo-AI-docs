---
import DocLayout from '../../layouts/DocLayout.astro';
import { readFileSync } from 'fs';
import { marked } from 'marked';

// 读取Markdown内容
const markdownContent = readFileSync('./src/content/features.md', 'utf-8');

// 调试：输出原始 Markdown 内容的前几行
console.log('=== 原始 Markdown 内容前 10 行 ===');
console.log(markdownContent.split('\n').slice(0, 10).join('\n'));

// 配置 marked 选项，确保引用块正确处理
marked.setOptions({
  gfm: true, // 启用 GitHub Flavored Markdown
  breaks: true // 启用换行符支持
});

// 预处理内容，将 {#id} 格式转换为标准格式
const processedContent = markdownContent.replace(/\{#([^}]+)\}/g, ' {#$1}');

let htmlContent = marked(processedContent) as string;

// 处理HTML注释中的标签信息，为引用块添加data-label属性
htmlContent = htmlContent.replace(
  /<blockquote>([\s\S]*?)<!-- label:([^>]+) -->/g,
  '<blockquote data-label="$2">$1'
);

// 调试：输出转换后的 HTML 内容
console.log('=== 转换后的 HTML 内容前 20 行 ===');
console.log(htmlContent.split('\n').slice(0, 20).join('\n'));

// 调试：检查是否包含 blockquote 标签
console.log('=== 是否包含 blockquote 标签 ===');
console.log('包含 blockquote:', htmlContent.includes('<blockquote>'));
console.log('包含 blockquote 的数量:', (htmlContent.match(/<blockquote>/g) || []).length);

// 手动添加ID到标题元素，修复正则表达式
htmlContent = htmlContent.replace(
  /<h([1-6])>([^<]*?)\s*\{#([^}]+)\}<\/h([1-6])>/g,
  '<h$1 id="$3">$2</h$1>'
);

// 如果上面的正则没有匹配到，尝试另一种方式
if (!htmlContent.includes('id="overview"')) {
  htmlContent = htmlContent.replace(
    /<h2>概述<\/h2>/g,
    '<h2 id="overview">概述</h2>'
  );
  htmlContent = htmlContent.replace(
    /<h2>首页<\/h2>/g,
    '<h2 id="home">首页</h2>'
  );
}

// 侧边栏配置 - 根据实际Markdown内容生成
const sidebarItems = [
  { href: '#overview', text: '概述' },
  { href: '#home', text: '首页' },
  { href: '#agent', text: '智能体' },
  { href: '#agent-engine', text: '  智能体引擎' },
  { href: '#agent-market', text: '  智能体市场' },
  { href: '#agent-management', text: '  智能体管理' },
  { href: '#mcp', text: 'MCP' },
  { href: '#mcp-market', text: '  MCP市场' },
  { href: '#mcp-token', text: '  MCP令牌' },
  { href: '#mcp-logs', text: '  使用日志' },
  { href: '#mcp-management', text: '  MCP管理' },
  { href: '#model-gateway', text: '模型网关' },
  { href: '#gateway-management', text: '  网关管理' },
  { href: '#system-management', text: '系统管理' },
  { href: '#system-settings', text: '  系统设置' },
  { href: '#user-management', text: '  用户管理' },
  { href: '#role-permissions', text: '  角色权限' }
];

// 面包屑配置
const breadcrumbs = [
  { href: '/', text: '首页' },
  { href: '/product-intro', text: '产品介绍' },
  { text: '产品功能' }
];
---

<DocLayout 
  title="产品功能介绍" 
  description="深入了解 TeGo-AI 智能体管理平台的核心功能模块和技术特性"
  sidebarTitle="目录"
  sidebarItems={sidebarItems}
  breadcrumbs={breadcrumbs}
>
  <div class="features-content">
    <!-- 直接渲染Markdown内容，不添加任何额外内容 -->
    <div set:html={htmlContent} />
  </div>
</DocLayout>



