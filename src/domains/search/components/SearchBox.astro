---
// 搜索框组件
// 支持高级搜索功能和更好的用户体验

import { SITE_CONFIG } from '../../../shared/constants/site';

interface Props {
  placeholder?: string;
  initialValue?: string;
  showFilters?: boolean;
  className?: string;
}

const { 
  placeholder = SITE_CONFIG.search.placeholder,
  initialValue = '',
  showFilters = false,
  className = ''
} = Astro.props;
---

<div class={`search-box ${className}`}>
  <div class="search-input-wrapper">
    <svg class="search-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
      <circle cx="11" cy="11" r="8"></circle>
      <path d="m21 21-4.35-4.35"></path>
    </svg>
    <input 
      type="text" 
      placeholder={placeholder}
      class="search-input" 
      id="searchInput"
      value={initialValue}
      autocomplete="off"
      data-min-length={SITE_CONFIG.search.minQueryLength}
    />
    {initialValue && (
      <button class="clear-button" id="clearButton" aria-label="清除搜索">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </button>
    )}
  </div>
  
  <button class="search-button" id="searchButton" type="submit">
    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
      <circle cx="11" cy="11" r="8"></circle>
      <path d="m21 21-4.35-4.35"></path>
    </svg>
    <span class="search-button-text">搜索</span>
  </button>
  
  {showFilters && (
    <div class="search-filters">
      <button class="filter-toggle" id="filterToggle">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polygon points="22,3 2,3 10,12.46 10,19 14,21 14,12.46 22,3"></polygon>
        </svg>
        筛选
      </button>
    </div>
  )}
</div>

<script>
  // 搜索框交互逻辑
  document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.getElementById('searchInput') as HTMLInputElement;
    const searchButton = document.getElementById('searchButton');
    const clearButton = document.getElementById('clearButton');
    const filterToggle = document.getElementById('filterToggle');
    
    if (!searchInput) return;
    
    // 搜索按钮点击事件
    searchButton?.addEventListener('click', () => {
      performSearch();
    });
    
    // 回车键搜索
    searchInput.addEventListener('keypress', (e) => {
      if (e.key === 'Enter') {
        performSearch();
      }
    });
    
    // 输入时实时搜索建议
    let searchTimeout: NodeJS.Timeout;
    searchInput.addEventListener('input', (e) => {
      const query = (e.target as HTMLInputElement).value.trim();
      
      // 清除之前的定时器
      clearTimeout(searchTimeout);
      
      // 显示/隐藏清除按钮
      if (clearButton) {
        clearButton.style.display = query ? 'flex' : 'none';
      }
      
      // 实时搜索建议（防抖）
      if (query.length >= 2) {
        searchTimeout = setTimeout(() => {
          showSearchSuggestions(query);
        }, 300);
      } else {
        hideSearchSuggestions();
      }
    });
    
    // 清除按钮事件
    clearButton?.addEventListener('click', () => {
      searchInput.value = '';
      searchInput.focus();
      hideSearchSuggestions();
      if (clearButton) {
        clearButton.style.display = 'none';
      }
    });
    
    // 筛选按钮事件
    filterToggle?.addEventListener('click', () => {
      toggleSearchFilters();
    });
    
    // 执行搜索
    function performSearch() {
      const query = searchInput.value.trim();
      if (query.length >= SITE_CONFIG.search.minQueryLength) {
        // 跳转到搜索结果页面
        window.location.href = `/search?q=${encodeURIComponent(query)}`;
      } else {
        // 显示错误提示
        showSearchError(`请输入至少${SITE_CONFIG.search.minQueryLength}个字符`);
      }
    }
    
    // 显示搜索建议
    function showSearchSuggestions(query: string) {
      // 这里可以实现搜索建议功能
      console.log('显示搜索建议:', query);
    }
    
    // 隐藏搜索建议
    function hideSearchSuggestions() {
      // 隐藏搜索建议
      console.log('隐藏搜索建议');
    }
    
    // 显示搜索错误
    function showSearchError(message: string) {
      // 显示错误提示
      console.log('搜索错误:', message);
    }
    
    // 切换搜索筛选
    function toggleSearchFilters() {
      // 切换筛选面板
      console.log('切换搜索筛选');
    }
  });
</script>

<style>
  .search-box {
    display: flex;
    align-items: center;
    background: white;
    border-radius: 50px;
    overflow: hidden;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
    transition: all 0.3s ease;
    border: 2px solid transparent;
  }
  
  .search-box:focus-within {
    border-color: #3b82f6;
    box-shadow: 0 8px 24px rgba(59, 130, 246, 0.15);
  }
  
  .search-input-wrapper {
    display: flex;
    align-items: center;
    flex: 1;
    position: relative;
  }
  
  .search-icon {
    position: absolute;
    left: 1rem;
    color: #94a3b8;
    pointer-events: none;
    z-index: 2;
  }
  
  .search-input {
    flex: 1;
    border: none;
    padding: 1rem 1rem 1rem 3rem;
    font-size: 1rem;
    outline: none;
    background: transparent;
    border-radius: 50px 0 0 50px;
    transition: all 0.3s ease;
  }
  
  .search-input::placeholder {
    color: #9ca3af;
    transition: color 0.3s ease;
  }
  
  .search-input:focus::placeholder {
    color: #cbd5e1;
  }
  
  .clear-button {
    position: absolute;
    right: 1rem;
    background: none;
    border: none;
    color: #94a3b8;
    cursor: pointer;
    padding: 0.25rem;
    border-radius: 50%;
    display: none;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
  }
  
  .clear-button:hover {
    background: rgba(148, 163, 184, 0.1);
    color: #64748b;
  }
  
  .search-button {
    background: linear-gradient(135deg, #3b82f6, #8b5cf6);
    border: none;
    padding: 1.2rem 2rem;
    color: white;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 0 50px 50px 0;
    position: relative;
    overflow: hidden;
    box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);
    font-weight: 600;
    font-size: 1.1rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }
  
  .search-button:hover {
    background: linear-gradient(135deg, #2563eb, #7c3aed);
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(59, 130, 246, 0.4);
  }
  
  .search-button:active {
    transform: translateY(-1px);
    box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);
  }
  
  .search-button svg {
    position: relative;
    z-index: 2;
    transition: all 0.3s ease;
  }
  
  .search-button:hover svg {
    transform: scale(1.1);
  }
  
  .search-button-text {
    margin-left: 0.5rem;
    font-weight: 700;
    transition: all 0.3s ease;
    position: relative;
    z-index: 2;
  }
  
  .search-button:hover .search-button-text {
    transform: scale(1.05);
  }
  
  .search-filters {
    margin-left: 1rem;
  }
  
  .filter-toggle {
    background: rgba(59, 130, 246, 0.1);
    border: 1px solid rgba(59, 130, 246, 0.2);
    color: #3b82f6;
    padding: 0.75rem 1rem;
    border-radius: 25px;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.9rem;
    font-weight: 500;
  }
  
  .filter-toggle:hover {
    background: rgba(59, 130, 246, 0.15);
    border-color: rgba(59, 130, 246, 0.3);
    transform: translateY(-1px);
  }
  
  .filter-toggle svg {
    transition: transform 0.3s ease;
  }
  
  .filter-toggle:hover svg {
    transform: scale(1.1);
  }
  
  /* 响应式设计 */
  @media screen and (max-width: 768px) {
    .search-box {
      flex-direction: column;
      border-radius: 16px;
    }
    
    .search-input-wrapper {
      width: 100%;
      border-radius: 16px 16px 0 0;
    }
    
    .search-input {
      border-radius: 16px 16px 0 0;
      padding: 1rem 1rem 1rem 3rem;
    }
    
    .search-button {
      width: 100%;
      border-radius: 0 0 16px 16px;
      padding: 1rem;
    }
    
    .search-filters {
      margin: 1rem 0 0 0;
      width: 100%;
    }
    
    .filter-toggle {
      width: 100%;
      justify-content: center;
      border-radius: 16px;
    }
  }
</style>
