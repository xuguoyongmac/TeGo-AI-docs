---
// 文档列表组件
// 用于展示分类下的所有文档

interface Props {
  category: string;
  docs: Array<{
    id: string;
    title: string;
    description: string;
    slug: string;
    tags: string[];
    readingTime: number;
    lastModified: Date;
  }>;
  showCategory?: boolean;
}

const { category, docs, showCategory = true } = Astro.props;

// 按最后修改时间排序
const sortedDocs = docs.sort((a, b) => 
  new Date(b.lastModified).getTime() - new Date(a.lastModified).getTime()
);
---

<div class="doc-list">
  {showCategory && (
    <div class="doc-list-header">
      <h2 class="doc-list-title">{category}</h2>
      <p class="doc-list-count">共 {docs.length} 篇文档</p>
    </div>
  )}
  
  <div class="doc-list-content">
    {sortedDocs.map(doc => (
      <article class="doc-item">
        <div class="doc-item-header">
          <h3 class="doc-item-title">
            <a href={`/docs/${doc.slug}`} class="doc-item-link">
              {doc.title}
            </a>
          </h3>
          <div class="doc-item-meta">
            <span class="doc-item-reading-time">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <circle cx="12" cy="12" r="10"></circle>
                <polyline points="12,6 12,12 16,14"></polyline>
              </svg>
              {doc.readingTime} 分钟
            </span>
            <span class="doc-item-date">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                <line x1="16" y1="2" x2="16" y2="6"></line>
                <line x1="8" y1="2" x2="8" y2="6"></line>
              </svg>
              {new Date(doc.lastModified).toLocaleDateString('zh-CN')}
            </span>
          </div>
        </div>
        
        <p class="doc-item-description">{doc.description}</p>
        
        {doc.tags.length > 0 && (
          <div class="doc-item-tags">
            {doc.tags.map(tag => (
              <span class="doc-item-tag">{tag}</span>
            ))}
          </div>
        )}
      </article>
    ))}
  </div>
</div>

<style>
  .doc-list {
    max-width: 800px;
    margin: 0 auto;
  }
  
  .doc-list-header {
    text-align: center;
    margin-bottom: 3rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid rgba(148, 163, 184, 0.1);
  }
  
  .doc-list-title {
    font-size: 2rem;
    font-weight: 700;
    color: #1e293b;
    margin: 0 0 0.5rem 0;
  }
  
  .doc-list-count {
    color: #64748b;
    font-size: 1rem;
    margin: 0;
  }
  
  .doc-list-content {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }
  
  .doc-item {
    padding: 2rem;
    background: rgba(255, 255, 255, 0.8);
    border: 1px solid rgba(148, 163, 184, 0.1);
    border-radius: 16px;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
  }
  
  .doc-item:hover {
    transform: translateY(-4px);
    box-shadow: 0 12px 32px rgba(59, 130, 246, 0.15);
    border-color: rgba(59, 130, 246, 0.2);
  }
  
  .doc-item-header {
    margin-bottom: 1rem;
  }
  
  .doc-item-title {
    margin: 0 0 0.5rem 0;
  }
  
  .doc-item-link {
    color: #1e293b;
    text-decoration: none;
    font-size: 1.3rem;
    font-weight: 600;
    transition: color 0.3s ease;
  }
  
  .doc-item-link:hover {
    color: #3b82f6;
  }
  
  .doc-item-meta {
    display: flex;
    gap: 1rem;
    align-items: center;
    font-size: 0.9rem;
    color: #64748b;
  }
  
  .doc-item-reading-time,
  .doc-item-date {
    display: flex;
    align-items: center;
    gap: 0.25rem;
  }
  
  .doc-item-description {
    color: #475569;
    line-height: 1.6;
    margin: 0 0 1rem 0;
  }
  
  .doc-item-tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }
  
  .doc-item-tag {
    padding: 0.25rem 0.75rem;
    background: rgba(59, 130, 246, 0.1);
    color: #3b82f6;
    border-radius: 20px;
    font-size: 0.8rem;
    font-weight: 500;
  }
  
  @media screen and (max-width: 768px) {
    .doc-item {
      padding: 1.5rem;
    }
    
    .doc-item-meta {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }
  }
</style>
