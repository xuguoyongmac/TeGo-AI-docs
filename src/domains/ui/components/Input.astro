---
// 可复用的输入框组件
// 支持多种类型、尺寸和状态

interface Props {
  type?: 'text' | 'email' | 'password' | 'search' | 'number' | 'tel' | 'url';
  placeholder?: string;
  value?: string;
  defaultValue?: string;
  name?: string;
  id?: string;
  size?: 'sm' | 'md' | 'lg';
  disabled?: boolean;
  readonly?: boolean;
  required?: boolean;
  error?: string;
  success?: string;
  helpText?: string;
  label?: string;
  fullWidth?: boolean;
  className?: string;
  'data-testid'?: string;
}

const {
  type = 'text',
  placeholder = '',
  value,
  defaultValue,
  name,
  id,
  size = 'md',
  disabled = false,
  readonly = false,
  required = false,
  error,
  success,
  helpText,
  label,
  fullWidth = false,
  className = '',
  'data-testid': testId
} = Astro.props;

// 生成CSS类名
const inputClasses = [
  'input',
  `input-${size}`,
  fullWidth ? 'input-full' : '',
  error ? 'input-error' : '',
  success ? 'input-success' : '',
  className
].filter(Boolean).join(' ');

const wrapperClasses = [
  'input-wrapper',
  fullWidth ? 'input-wrapper-full' : ''
].filter(Boolean).join(' ');
---

<div class={wrapperClasses}>
  {label && (
    <label for={id} class="input-label">
      {label}
      {required && <span class="input-required">*</span>}
    </label>
  )}
  
  <div class="input-field-wrapper">
    <input
      class={inputClasses}
      type={type}
      placeholder={placeholder}
      value={value}
      defaultValue={defaultValue}
      name={name}
      id={id}
      disabled={disabled}
      readonly={readonly}
      required={required}
      data-testid={testId}
    />
    
    {error && (
      <svg class="input-icon input-icon-error" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <circle cx="12" cy="12" r="10"></circle>
        <line x1="15" y1="9" x2="9" y2="15"></line>
        <line x1="9" y1="9" x2="15" y2="15"></line>
      </svg>
    )}
    
    {success && (
      <svg class="input-icon input-icon-success" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
        <polyline points="22,4 12,14.01 9,11.01"></polyline>
      </svg>
    )}
  </div>
  
  {(error || success || helpText) && (
    <div class="input-message">
      {error && <span class="input-error-text">{error}</span>}
      {success && <span class="input-success-text">{success}</span>}
      {helpText && <span class="input-help-text">{helpText}</span>}
    </div>
  )}
</div>

<style>
  .input-wrapper {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .input-wrapper-full {
    width: 100%;
  }
  
  .input-label {
    font-size: 0.875rem;
    font-weight: 500;
    color: #374151;
    cursor: pointer;
  }
  
  .input-required {
    color: #ef4444;
    margin-left: 0.25rem;
  }
  
  .input-field-wrapper {
    position: relative;
    display: flex;
    align-items: center;
  }
  
  .input {
    width: 100%;
    border: 2px solid #d1d5db;
    border-radius: 8px;
    background: white;
    color: #111827;
    font-size: 1rem;
    line-height: 1.5;
    transition: all 0.2s ease;
    outline: none;
  }
  
  .input:focus {
    border-color: #3b82f6;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  }
  
  .input:disabled {
    background: #f9fafb;
    color: #6b7280;
    cursor: not-allowed;
  }
  
  .input:readonly {
    background: #f9fafb;
    color: #6b7280;
  }
  
  .input-error {
    border-color: #ef4444;
  }
  
  .input-error:focus {
    border-color: #ef4444;
    box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
  }
  
  .input-success {
    border-color: #10b981;
  }
  
  .input-success:focus {
    border-color: #10b981;
    box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.1);
  }
  
  .input-full {
    width: 100%;
  }
  
  /* 尺寸变体 */
  .input-sm {
    padding: 0.5rem 0.75rem;
    font-size: 0.875rem;
    min-height: 32px;
  }
  
  .input-md {
    padding: 0.75rem 1rem;
    font-size: 1rem;
    min-height: 40px;
  }
  
  .input-lg {
    padding: 1rem 1.25rem;
    font-size: 1.125rem;
    min-height: 48px;
  }
  
  /* 图标样式 */
  .input-icon {
    position: absolute;
    right: 1rem;
    pointer-events: none;
  }
  
  .input-icon-error {
    color: #ef4444;
  }
  
  .input-icon-success {
    color: #10b981;
  }
  
  /* 消息样式 */
  .input-message {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }
  
  .input-error-text {
    font-size: 0.875rem;
    color: #ef4444;
  }
  
  .input-success-text {
    font-size: 0.875rem;
    color: #10b981;
  }
  
  .input-help-text {
    font-size: 0.875rem;
    color: #6b7280;
  }
  
  /* 占位符样式 */
  .input::placeholder {
    color: #9ca3af;
    transition: color 0.2s ease;
  }
  
  .input:focus::placeholder {
    color: #d1d5db;
  }
  
  /* 焦点状态 */
  .input:focus-visible {
    outline: none;
  }
  
  /* 响应式设计 */
  @media screen and (max-width: 768px) {
    .input-md {
      padding: 0.625rem 0.875rem;
      font-size: 0.95rem;
      min-height: 36px;
    }
    
    .input-lg {
      padding: 0.875rem 1.125rem;
      font-size: 1rem;
      min-height: 44px;
    }
  }
  
  /* 深色模式支持 */
  @media (prefers-color-scheme: dark) {
    .input {
      background: #1f2937;
      border-color: #4b5563;
      color: #f9fafb;
    }
    
    .input:focus {
      border-color: #60a5fa;
      box-shadow: 0 0 0 3px rgba(96, 165, 250, 0.1);
    }
    
    .input:disabled {
      background: #374151;
      color: #9ca3af;
    }
    
    .input:readonly {
      background: #374151;
      color: #9ca3af;
    }
    
    .input-label {
      color: #d1d5db;
    }
    
    .input::placeholder {
      color: #6b7280;
    }
    
    .input:focus::placeholder {
      color: #9ca3af;
    }
  }
</style>
